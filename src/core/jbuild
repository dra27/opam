(* -*- tuareg -*- *)

module J = Jbuild_plugin.V1

let (ocaml_major, ocaml_minor) =
  Scanf.sscanf J.ocaml_version "%u.%u" (fun a b -> (a, b))

let () =
  if ocaml_major < 4 || ocaml_minor = 0 then begin
    Printf.eprintf "OCaml %s is not supported\n" J.ocaml_version;
    exit 1
  end

let compat_version =
  match ocaml_minor with
  | 01 -> "4.01"
  | 02 -> "4.02"
  | _  -> "4.03"

let () = Printf.ksprintf J.send {|
(jbuild_version 1)

(rule
  ((targets (ocaml-context-flags.sexp))
   (deps (../../shell/context_flags.ml))
   (action (with-stdout-to ${@} (run ocaml ../../shell/context_flags.ml flags)))))

(rule
  ((targets (c-flags.sexp))
   (deps (../../shell/context_flags.ml))
   (action (with-stdout-to ${@} (run ocaml ../../shell/context_flags.ml cflags)))))

(rule
  ((targets (c-libraries.sexp))
   (deps (../../shell/context_flags.ml))
   (action (with-stdout-to ${@} (run ocaml ../../shell/context_flags.ml clibs)))))

(library
  ((name opam_core)
   (public_name opam-core)
   (synopsis "OCaml Package Manager core internal stdlib")
   (libraries (jsonm re ocamlgraph unix bigarray))
   (flags (:standard (:include ../ocaml-flags-standard.sexp) (:include ocaml-context-flags.sexp)))
   (c_names (opamInject opamWindows))
   (c_flags (:standard (:include c-flags.sexp)))
   (c_library_flags (:standard (:include c-libraries.sexp)))
   (wrapped false)))

#| Bug in jbuilder. Expect these rules to work:
(rule
  ((targets (ocaml-compat.sexp))
   (deps (../../shell/context_flags.ml))
   (action (with-stdout-to ${@} (run ocaml ../../shell/context_flags.ml compat)))))

(rule
  ((targets (opamCompat.ml))
   (deps (opamCompat.ml.4.01 opamCompat.ml.4.02 opamCompat.ml.4.03))
   (action (copy ${@}.${read:ocaml-compat.sexp} ${@}))))

(rule
  ((targets (opamCompat.mli))
   (deps (opamCompat.mli.4.01 opamCompat.mli.4.02 opamCompat.mli.4.03))
   (action (copy ${@}.${read:ocaml-compat.sexp} ${@}))))
|#

(rule (copy opamCompat.ml.%s opamCompat.ml))

(rule (copy opamCompat.mli.%s opamCompat.mli))
|} compat_version compat_version
