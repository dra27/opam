name: Windows

on: [ push, pull_request ]
# dra27on:
# dra27  push:
# dra27    paths:
# dra27    - 'src/**'
# dra27    - '!src/tools/**'
# dra27    - 'src_ext/**'
# dra27    - 'dune'
# dra27    - 'dune-project'
# dra27    - '*.opam'
# dra27    - 'Makefile*'
# dra27    - 'configure*'
# dra27    - '.github/**'
# dra27  pull_request:
# dra27    paths:
# dra27    - 'src/**'
# dra27    - '!src/tools/**'
# dra27    - 'src_ext/**'
# dra27    - 'dune'
# dra27    - 'dune-project'
# dra27    - '*.opam'
# dra27    - 'Makefile*'
# dra27    - 'configure*'
# dra27    - '.github/**'
# dra27    - 'tests/**'
#    paths-ignore:
#    - 'release/**'
#    - 'shell/**'
#    - 'admin-scripts/**'
#    - 'doc/**'
#    - 'CHANGES'
#    - 'LICENSE'
#    - 'CONTRIBUTING.md'
#    - 'master_changes.md'
#    - 'README.md'

env:
  OPAMBSVERSION: 2.1.0
  OPAMBSROOT: ~/.cache/.opam.cached
  OPAM12CACHE: ~/.cache/opam1.2/cache
  OPAM_REPO: https://github.com/dra27/opam-repository.git
  OPAM_TEST_REPO_SHA: fd4405c83bcd23f91373978b45479694079a8c79
  OPAM_REPO_SHA: fd4405c83bcd23f91373978b45479694079a8c79
  OCAML_VERSION: 4.13.1
  GH_OCAML_CACHE: D:/cygwin/home/runneradmin/.cache/ocaml-local
  SOLVER:
  CYGWIN_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
  CYGWIN_ROOT: D:\cygwin
  CYGWIN32_CACHE_DIR: D:\caches\cygwin32
  CYGWIN64_CACHE_DIR: D:\caches\cygwin64
  CYGWIN: winsymlinks:native
  # COMBAK ... date based or summat
  CYGWIN_EPOCH: 13
  HOST:

defaults:
  run:
    shell: bash

jobs:

####
# Caches
####
  analyse:
    runs-on: windows-latest
    outputs:
      cygwin: ${{ steps.keys.outputs.cygwin }}
      archives: ${{ steps.keys.outputs.archives }}
    steps:
    - uses: actions/checkout@v2
    - id: keys
      name: Determine workflow cache keys
      shell: cmd
      run: |
        where tar
        where zstd
        echo cygwin=${{ hashFiles('.github/scripts/cygwin.cmd') }}
        echo ::set-output name=cygwin::${{ hashFiles('.github/scripts/cygwin.cmd') }}
        echo archives=${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}
        echo ::set-output name=archives::${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}

  cygwin32:
    runs-on: windows-latest
    needs: analyse
    steps:
    - name: Cygwin32 Cache
      id: cygwin32
      uses: dra27/cache@opam
      with:
        path: ${{ env.CYGWIN32_CACHE_DIR }}
        key: cygwin32-${{ runner.os }}-${{ needs.analyse.outputs.cygwin }}-${{ env.CYGWIN_EPOCH }}
        check-only: true
    - uses: actions/checkout@v2
      if: steps.cygwin32.outputs.cache-hit != 'true'
    - name: Install Cygwin32
      if: steps.cygwin32.outputs.cache-hit != 'true'
      shell: cmd
      run: .github\scripts\cygwin.cmd cygwin32

  cygwin64:
    runs-on: windows-latest
    needs: analyse
    steps:
    - name: Cygwin64 Cache
      id: cygwin64
      uses: dra27/cache@opam
      with:
        path: ${{ env.CYGWIN64_CACHE_DIR }}
        key: cygwin64-${{ runner.os }}-${{ needs.analyse.outputs.cygwin }}-${{ env.CYGWIN_EPOCH }}
        check-only: true
    - uses: actions/checkout@v2
      if: steps.cygwin64.outputs.cache-hit != 'true'
    - name: Install Cygwin64
      if: steps.cygwin64.outputs.cache-hit != 'true'
      shell: cmd
      run: .github\scripts\cygwin.cmd cygwin64

  testing-caches:
    runs-on: ubuntu-latest
    steps:
    - name: cache
      uses: dra27/cache@opam
      with:
        path: foo
        key: foo
        force-gzip: true
    - name: init
      run: echo howzat>foo

  consume-unix:
    runs-on: ${{ matrix.os }}
    needs: testing-caches
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
    - name: cache
      uses: dra27/cache@opam
      with:
        path: foo
        key: foo
        force-gzip: true
    - name: display
      run: |
        ls -l
        cat foo

  consume-windows:
    runs-on: windows-latest
    needs: testing-caches
    steps:
    - name: cache
      uses: dra27/cache@opam
      with:
        path: foo
        key: foo
        force-gzip: true
    - name: display
      shell: cmd
      run: |
        dir
        type foo

  archives-cache:
    runs-on: windows-latest
    needs: [analyse, cygwin64]
    steps:
    - name: Check PATH before
      shell: cmd
      run: echo %PATH%
    - name: src ext archives cache
      id: archives
      uses: dra27/cache@opam
      with:
        path: |
          src_ext/archives
          ~/opam-repository
          # Use of cygwin below is tmeporary!
        key: archives-${{ runner.os }}-${{ needs.analyse.outputs.archives }}-${{ env.OPAM_REPO_SHA }}-XXXX-${{ needs.analyse.outputs.cygwin }}
        check-only: true
    - uses: actions/checkout@v2
      if: steps.archives.outputs.cache-hit != 'true'
    - name: Cygwin Cache
      uses: dra27/cache@opam
      id: cygwin
      if: steps.archives.outputs.cache-hit != 'true'
      with:
        path: ${{ env.CYGWIN64_CACHE_DIR }}
        key: cygwin64-${{ runner.os }}-${{ needs.analyse.outputs.cygwin }}-${{ env.CYGWIN_EPOCH }}
    - name: Install Cygwin64
      if: ${{ steps.archives.outputs.cache-hit != 'true' && steps.cygwin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: .github\scripts\cygwin.cmd cygwin64
    - name: Configure Cygwin
      if: ${{ steps.cygwin.outputs.cache-hit == 'true' && steps.archives.outputs.cache-hit != 'true' }}
      shell: cmd
      run: .github\scripts\cygwin.cmd
    - name: Check PATH after Cygwin
      shell: cmd
      run: echo %PATH%
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: Check PATH after caching
      shell: cmd
      run: echo %PATH%

####
# Build
####
  # Remove this when done - it's just to prime the compiler cache
#  debug-compiler:
#    runs-on: windows-latest
#    needs: [cygwin32, cygwin64, archives-cache]
#    strategy:
#      matrix:
#        os: [ Windows ]
#        host: [ x86_64-pc-windows, i686-w64-mingw32, "" ]
#        ocamlv: [ 4.13.1 ]
#      fail-fast: false
#    steps:
#    - uses: actions/checkout@v2
#    - name: Cygwin Cache
#      id: cygwin
#      uses: dra27/cache@opam
#      with:
#        path: ${{ env.CYGWIN64_CACHE_DIR }}
#        key: cygwin64-${{ runner.os }}-${{ hashFiles('.github/scripts/cygwin.cmd') }}-${{ env.CYGWIN_EPOCH }}
#    - name: Install Cygwin
#      shell: cmd
#      run: .github\scripts\cygwin.cmd
#    - name: src ext archives cache
#      id: archives
#      uses: dra27/cache@opam
#      with:
#        path: |
#          src_ext/archives
#          ~/opam-repository
#        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
#    - name: Retrieve archives
#      if: steps.archives.outputs.cache-hit != 'true'
#      run: bash -exu .github/scripts/archives-cache.sh
#    - name: ocaml ${{ matrix.ocamlv }} cache
#      id: ocaml-cache
#      uses: dra27/cache@opam
#      with:
#        path: ${{ env.GH_OCAML_CACHE }}/cache.tar
#        key: ${{ runner.os }}-ocaml-${{ matrix.host }}-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
#    - name: OCaml ${{ matrix.ocamlv }}
#      env:
#        OCAML_VERSION: ${{ matrix.ocamlv }}
#        HOST: ${{ matrix.host }}
#      run: bash -exu .github/scripts/main/ocaml-cache.sh "${{ steps.ocaml-cache.outputs.cache-hit }}"

  build:
    runs-on: windows-latest
#    needs: [cygwin32, cygwin64, archives-cache, debug-compiler]
    needs: [cygwin32, cygwin64, archives-cache]
    strategy:
      matrix:
        os: [ Windows ]
        host: [ x86_64-pc-windows, i686-w64-mingw32, "" ]
        ocamlv: [ 4.13.1 ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Cygwin Cache
      id: cygwin
      uses: dra27/cache@opam
      with:
        path: ${{ env.CYGWIN64_CACHE_DIR }}
        key: cygwin64-${{ runner.os }}-${{ hashFiles('.github/scripts/cygwin.cmd') }}-${{ env.CYGWIN_EPOCH }}
    - name: Install Cygwin
      shell: cmd
      run: .github\scripts\cygwin.cmd
    - name: src ext archives cache
      id: archives
      uses: dra27/cache@opam
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: dra27/cache@opam
      with:
        path: ${{ env.GH_OCAML_CACHE }}/cache.tar
        key: ${{ runner.os }}-ocaml-${{ matrix.host }}-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
        HOST: ${{ matrix.host }}
      run: bash -exu .github/scripts/main/ocaml-cache.sh "${{ steps.ocaml-cache.outputs.cache-hit }}"
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
          # XXX Can this be promoted to all the steps?!
        HOST: ${{ matrix.host }}
      run: bash -exu .github/scripts/main/main.sh

####
# Compile solver backends
####
  solvers:
    runs-on: windows-latest
    needs: [ cygwin32, cygwin64, build, archives-cache ]
    strategy:
      matrix:
        os: [ Windows ]
        ocamlv: [ 4.11.2 ]
        solver: [ z3, 0install ]
      fail-fast: false
    env:
      SOLVER: ${{ matrix.solver }}
      OPAMBSROOT: ~/.cache/opam.${{ matrix.solver }}.cached
    steps:
    - uses: actions/checkout@v2
    - name: Cygwin Cache
      id: cygwin
      uses: dra27/cache@opam
      with:
        path: ${{ env.CYGWIN64_CACHE_DIR }}
        key: cygwin64-${{ runner.os }}-${{ hashFiles('.github/scripts/cygwin.cmd') }}-${{ env.CYGWIN_EPOCH }}
    - name: Install Cygwin
      run: .github\scripts\cygwin.cmd
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: dra27/cache@opam
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}-test
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/ocaml-cache.sh "${{ steps.ocaml-cache.outputs.cache-hit }}"
    - name: src ext archives cache
      id: archives
      uses: dra27/cache@opam
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: opam bootstrap cache
      id: opam-bootstrap
      uses: dra27/cache@opam
      with:
        path: |
          ${{ env.OPAMBSROOT }}/**
          ~/.cache/opam-local/bin/**
        key: opam-${{ matrix.solver }}-${{ runner.os }}-${{ env.OPAMBSVERSION }}-${{ matrix.ocamlv }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scriptsopam-bs-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/main/opam-bs-cache.sh
    - name: Compile
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/solvers.sh
