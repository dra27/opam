EXT_LIB:=$(shell PATH="$(PATH)" ocamlc -config | sed -ne "s/ext_lib: \.//p")
EXT_EXE:=$(if $(filter Win32,$(shell PATH="$(PATH)" ocamlc -config | fgrep os_type)),.exe)
OCAMLBIN:=$(dir $(shell PATH="$(PATH)" command -v ocamlc))
# SITELIB must *not* be evaluated with := (because it must be evaluated *after*
# ocamlfind has been compiled)
ifeq ($(shell command -v cygpath 2>/dev/null),)
OCAMLROOT:=$(dir $(abspath $(OCAMLBIN)))
SITELIB=$(shell PATH="$(PATH)" ocamlfind printconf path)
else
OCAMLROOT:=$(shell PATH="$(PATH)" echo $(dir $(abspath $(OCAMLBIN))) | cygpath -f - -m)
SITELIB=$(shell PATH="$(PATH)" ocamlfind printconf path | cygpath -f - -m)
endif

# Package dependencies
opam-file-format.pkgbuild: findlib.pkgbuild

cppo.pkgbuild: findlib.pkgbuild

extlib.pkgbuild: findlib.pkgbuild cppo.pkgbuild

ocamlbuild.pkgbuild: findlib.pkgbuild

re.pkgbuild: findlib.pkgbuild ocamlbuild.pkgbuild

ocamlgraph.pkgbuild: findlib.pkgbuild

result.pkgbuild: findlib.pkgbuild

topkg.pkgbuild: findlib.pkgbuild ocamlbuild.pkgbuild result.pkgbuild

cmdliner.pkgbuild: findlib.pkgbuild ocamlbuild.pkgbuild result.pkgbuild topkg.pkgbuild

cudf.pkgbuild: findlib.pkgbuild ocamlbuild.pkgbuild extlib.pkgbuild

dose3.pkgbuild: findlib.pkgbuild ocamlbuild.pkgbuild cppo.pkgbuild extlib.pkgbuild re.pkgbuild ocamlgraph.pkgbuild cudf.pkgbuild

opam-file-format-pkg-build:
	make LIBDIR=$(SITELIB) all install

findlib-pkg-build:
	./configure
	make all opt install

cppo-pkg-build:
	make PREFIX=$(OCAMLROOT) opt install-bin

extlib-pkg-build:
	make minimal=1 build install

ocamlbuild-pkg-build:
	make -f configure.make all OCAMLBUILD_PREFIX=$(OCAMLROOT) OCAMLBUILD_BINDIR=$(OCAMLBIN) OCAMLBUILD_LIBDIR=$(SITELIB) OCAML_NATIVE=true OCAML_NATIVE_TOOLS=true
	make all findlib-install

re-pkg-build:
	ocaml setup.ml -configure --prefix $(OCAMLROOT)
	ocaml setup.ml -build
	ocaml setup.ml -install

ocamlgraph-pkg-build:
	./configure
	make all install-findlib

result-pkg-build:
	make byte native install

EXTS1=$(EXT_LIB) mli
EXTS2=a i ti xa xs

topkg-pkg-build:
	ocaml pkg/pkg.ml build --pkg-name topkg --dev-pkg false
	ocamlfind install topkg _build/pkg/META $(addprefix _build/src/topkg.,$(EXTS1)) $(addprefix _build/src/topkg.cm,$(EXTS2)) _build/src/topkg*.cmx

cmdliner-pkg-build:
	ocaml pkg/pkg.ml build --pinned false
	ocamlfind install cmdliner _build/pkg/META $(addprefix _build/src/cmdliner.,$(EXTS1)) $(addprefix _build/src/cmdliner.cm,$(EXTS2)) _build/src/cmdliner*.cmx

cudf-pkg-build:
	make DOC= BINDIR=$(OCAMLBIN) all opt install

dose3-pkg-build:
	./configure $(if $(EXT_EXE),--prefix=$(OCAMLROOT),--bindir=/../../$(OCAMLBIN))
	make libs apps
	make install

jbuilder-pkg-build:
	ocaml bootstrap.ml
	./boot.exe
	cp _build/default/bin/main.exe $(OCAMLBIN)/jbuilder$(EXT_EXE)
